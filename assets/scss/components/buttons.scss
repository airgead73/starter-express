/* Buttons
–––––––––––––––––––––––––––––––––––––––––––––––––– */
@use '../abstracts/tools' as *;
@use '../abstracts/variables/root' as r;
@use './links.scss' as *;
@use 'sass:color';

%btnCommon {
  border-radius: 4px;
  text-transform: uppercase;
  font-size: .65rem;
  line-height: 1;
  padding: 14px 16px;
  white-space: nowrap;
  cursor: pointer;
  vertical-align: baseline;
}

@mixin btnSolid($color: clr(primary)) {
  @extend %btnCommon;
  @include setBG($color);
  transition-property: background-color, color;
  transition-duration: .26s;
  &:hover {
    @include setBG(mix(white, $color, 50%));
  }
}

@mixin btnOutline($color: clr(primary)) {
  $lightness: lightness($color);
  @extend %btnCommon;  
  @if($lightness > 50) {
    color: mix(black, $color, 50%);
  } @else {
    color: $color;
  }
  background-color: white;
  border-width: 1px;
  border-style: solid;
  border-color: $color;
  transition-property: background-color, color;
  transition-duration: .26s;
  &:hover {
    @include setBG($color);
  }
}

%iconCommon {
  display: inline-block;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  cursor: pointer;
}

@mixin btnDisabled {
  @include setBG(clr(primary, lightest));
  border: none;
  cursor: none;
  &:hover {
    @include setBG(clr(primary, lightest));
  }
}

@mixin iconSolid($color: clr(primary)) {
  @extend %iconCommon;
  @include setBG($color);
  transition-property: background-color, color;
  transition-duration: .26s;
  &:hover {
    @include setBG(mix(white, $color, 50%));
  }  
}

@mixin iconOutline($color: clr(primary)) {
  $lightness: lightness($color);
  @extend %iconCommon;  
  @if($lightness > 50) {
    color: mix(black, $color, 50%);
  } @else {
    color: $color;
  }
  background-color: white;
  border-width: 1px;
  border-style: solid;
  border-color: $color;
  transition-property: background-color, color;
  transition-duration: .26s;
  &:hover {
    @include setBG($color);
  }
}

button {
  cursor: pointer;
  & * {
    pointer-events: none;
  }
}

.btn {  
  @include btnSolid(clr(primary, darker));
  &--green {
    @include btnSolid(clr(green));
  }
  &--red {
    @include btnSolid(clr(red));
  }
  &--blue{
    @include btnSolid(clr(blue));
  }
  &--yellow {
    @include btnSolid(clr(yellow));
  }
  &--orange {
    @include btnSolid(clr(orange));
  }
  &--black {
    @include btnSolid(clr(black));
  }
 }

 .btn--outline { 
  @include btnOutline(clr(primary, darker));
  &--green {
    @include btnOutline(clr(green));
  }
  &--red {
    @include btnOutline(clr(red));
  }
  &--blue{
    @include btnOutline(clr(blue));
  }
  &--yellow {
    @include btnOutline(clr(yellow));
  }
  &--orange {
    @include btnOutline(clr(orange));
  }
  &--black {
    @include btnOutline(clr(black));
  }
 }

 button:disabled {
  @include btnDisabled();
 }

 .icon { 
  @include iconSolid(clr(primary)); 
  &--green {
    @include iconSolid(clr(green));
  }
  &--red {
    @include iconSolid(clr(red));
  }
  &--blue{
    @include iconSolid(clr(blue));
  }
  &--yellow {
    @include iconSolid(clr(yellow));
  }
  &--orange {
    @include iconSolid(clr(orange));
  }
 }

 .icon--outline {  
  @include iconOutline(clr(primary));
  &--green {
    @include iconOutline(clr(green));
  }
  &--red {
    @include iconOutline(clr(red));
  }
  &--blue{
    @include iconOutline(clr(blue));
  }
  &--yellow {
    @include iconOutline(clr(yellow));
  }
  &--orange {
    @include iconOutline(clr(orange));
  }
 }

 button:disabled {
  background-color: clr(primary, lightest);
  border-color: clr(primary, lightest);
  color: clr(primary);
  cursor: none;
  &:hover {
    background-color: clr(primary, lightest);
    color: clr(primary);    
  } 
}

